{{/*
Copyright (C) 2021 Robin.io All Rights Reserved.
*/}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}-logstore-entrypoint-configmap
  namespace: {{ .Release.Namespace }}
data:
  {{ (.Files.Glob "scripts/logstore-entrypoint.sh").AsConfig | nindent 2 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}-logstore-env
  namespace: {{ .Release.Namespace }}
data:
  POD_NAME: {{ .Release.Name }}-logstore
  MDCAP_SSL_CERTS_DIR: /etc/mdcap/certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: {{ .Release.Name }}-logstore-depl
    release: {{ .Release.Name }}
    app: {{ .Release.Name }}-logstore
  name: {{ template "logstore.fullname" . }}
{{- if .Values.logstore.annotations }}
  annotations:
{{ toYaml .Values.logstore.annotations | indent 4 }}
{{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-logstore
  strategy:
    type: RollingUpdate
    rollingUpdate:
    {{- if .Release.IsUpgrade }}
      maxUnavailable: 1
    {{- else }}
      maxUnavailable: 30%
    {{- end }}
      maxSurge: 1
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
{{- if .Values.logstore.annotations }}
{{ toYaml .Values.logstore.annotations | indent 8 }}
{{- end }}
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}-logstore
        release: {{ .Release.Name }}
        app: {{ .Release.Name }}-logstore
      name: {{ .Release.Name }}-logstore
      namespace: {{ .Release.Namespace }}
    spec:
{{ if .Values.imageCredentials.registry }}
      imagePullSecrets:
        - name:  {{ .Release.Name }}-imagepull-secret
{{ end }}
{{ if .Values.logstore.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.logstore.nodeSelector | indent 8 }}
{{ end }}
      containers:
      - command: 
        - /scripts/logstore-entrypoint.sh
        - python3
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-logstore-env        
        image: "{{ .Values.logstore.image.repository }}:{{ .Values.logstore.image.tag }}"
        imagePullPolicy: "{{ .Values.logstore.image.pullPolicy }}"
        name: {{ .Release.Name }}-logstore
        resources:
{{ toYaml .Values.logstore.resources | indent 10 }}
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTPS
{{ toYaml .Values.logstore.livenessProbe | indent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTPS
{{ toYaml .Values.logstore.readinessProbe | indent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /scripts/logstore-entrypoint.sh
          name: entrypoint-script
          subPath: logstore-entrypoint.sh
        - mountPath: /.robin/scripts/certs/cert.pem
          name: cert-secret
          readOnly: true
          subPath: cert.pem
        - mountPath: /.robin/scripts/certs/key.pem
          name: key-secret
          readOnly: true
          subPath: key.pem
        - mountPath: "{{ .Values.logstore.persistentVolume.mountPath }}"
          name: {{ .Release.Name }}-logstore-volume-01
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      hostAliases:
      hostname: {{ .Release.Name }}-logstore-01
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: entrypoint-script
        configMap:
          name: {{ .Release.Name }}-logstore-entrypoint-configmap
          defaultMode: 0755
      - name: cert-secret
        secret:
          secretName: {{ .Release.Name }}-cert-secret
          defaultMode: 0420
      - name: key-secret
        secret:
          secretName: {{ .Release.Name }}-key-secret
          defaultMode: 0420
      - name: {{ .Release.Name }}-logstore-volume-01
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-logstore-pvc-01
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-logstore-pvc-01
{{- if .Values.logstore.persistentVolume.annotations }}
  annotations:
{{ toYaml .Values.logstore.persistentVolume.annotations | indent 4 }}
{{- end }}
spec:
  accessModes:
    - {{ .Values.logstore.persistentVolume.accessMode }}
  storageClassName: {{ include "logstore.storageclass.name" . }} 
  resources:
    requests:
      storage: {{ .Values.logstore.persistentVolume.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-logstore
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: {{ .Release.Name }}-logstore
      port: 8000
      protocol: TCP
  selector:
    app: {{ .Release.Name }}-logstore
  type: ClusterIP
